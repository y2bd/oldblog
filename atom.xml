<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[this has yet to be defined]]></title>
  <link href="http://y2bd.github.io/atom.xml" rel="self"/>
  <link href="http://y2bd.github.io/"/>
  <updated>2014-03-18T17:45:42-07:00</updated>
  <id>http://y2bd.github.io/</id>
  <author>
    <name><![CDATA[y2bd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
    <title type="html"><![CDATA[Creating a parallax scrolling effect on Windows Phone]]></title>
    <link href="http://y2bd.github.io/blog/2014/03/18/creating-a-parallax-scrolling-effect-on-windows-phone/"/>
    
    <updated>2014-03-18T14:19:00-07:00</updated>
    <id>http://y2bd.github.io/blog/2014/03/18/creating-a-parallax-scrolling-effect-on-windows-phone</id>
    
    <content type="html"><![CDATA[<p><img class="left" src="http://y2bd.github.io/images/posts/parallax/appsocial.png" width="240" height="600" title="Here's a app list of mine." ></p>

<p><em>tl;dr: <a href="https://github.com/y2bd/WPParallaxScrolling">Here&rsquo;s a commented sample project if you&rsquo;re in a hurry</a></em></p>

<p>Windows Phone&rsquo;s scrollviews have a property where if you scroll past the content area, the content is squished.
Nokia&rsquo;s <a href="http://www.nokia.com/us-en/apps/app-social/">App Social</a> has a cool but subtle effect that takes advantage of this.
If you&rsquo;re looking at a recommendation list within the app and try pulling the list down, you&rsquo;ll notice that the header image doesn&rsquo;t scroll with the
rest of the list. Instead, it scrolls slower than everything else, as well as expands to fill the space made by the squished scrollview.</p>

<p>If you&rsquo;ve ever played with an iOS device, you should know this effect well, as it&rsquo;s present in so many apps on that platform. My favorite example is
probably within <a href="http://dayoneapp.com/">Day One</a>, an awesome diary app, where within your diary entries you can set a header photo that behaves similarly.</p>

<p>Creating this effect on Windows Phone is certainly tricky for a variety of reasons&mdash;in fact, if you play around with App Social&rsquo;s implementation,
you might even catch a few glitches&mdash;but with a bit of work you can hack together something like this:</p>

<p><img class="gfyitem" data-id="SimpleLiveAnnelid" data-controls="false" data-dot="false"/></p>

<p>Let&rsquo;s get to work! Open up VS and create a new blank WP8 project. This might work in WP7 (or even WP8.1!) but I haven&rsquo;t tested it.</p>

<!--more-->


<p>Here&rsquo;s the XAML we&rsquo;re going to be using:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Grid</span> <span class="na">x:Name=</span><span class="s">&quot;LayoutRoot&quot;</span>
</span><span class='line'>      <span class="na">Background=</span><span class="s">&quot;Transparent&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;Grid</span> <span class="na">x:Name=</span><span class="s">&quot;ImageContainer&quot;</span>
</span><span class='line'>          <span class="na">VerticalAlignment=</span><span class="s">&quot;Top&quot;</span>
</span><span class='line'>          <span class="na">CacheMode=</span><span class="s">&quot;BitmapCache&quot;</span>
</span><span class='line'>          <span class="na">RenderTransformOrigin=</span><span class="s">&quot;0.5,0.5&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Grid.RenderTransform&gt;</span>
</span><span class='line'>            <span class="nt">&lt;CompositeTransform</span> <span class="na">x:Name=</span><span class="s">&quot;ImageTransform&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/Grid.RenderTransform&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;Image</span> <span class="na">Source=</span><span class="s">&quot;/Assets/chitanda.jpg&quot;</span>
</span><span class='line'>               <span class="na">Stretch=</span><span class="s">&quot;None&quot;</span>
</span><span class='line'>               <span class="na">HorizontalAlignment=</span><span class="s">&quot;Center&quot;</span>
</span><span class='line'>               <span class="na">VerticalAlignment=</span><span class="s">&quot;Top&quot;</span>
</span><span class='line'>               <span class="na">x:Name=</span><span class="s">&quot;Image&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Grid&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;ScrollViewer</span> <span class="na">x:Name=</span><span class="s">&quot;Scroller&quot;</span>
</span><span class='line'>                  <span class="na">ManipulationMode=</span><span class="s">&quot;Control&quot;</span>
</span><span class='line'>                  <span class="na">Background=</span><span class="s">&quot;#33000000&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Grid</span> <span class="na">x:Name=</span><span class="s">&quot;ScrollGrid&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;Grid.RowDefinitions&gt;</span>
</span><span class='line'>                <span class="nt">&lt;RowDefinition</span> <span class="na">Height=</span><span class="s">&quot;500&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;RowDefinition</span> <span class="na">Height=</span><span class="s">&quot;*&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/Grid.RowDefinitions&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;StackPanel</span> <span class="na">x:Name=</span><span class="s">&quot;TitlePanel&quot;</span>
</span><span class='line'>                        <span class="na">VerticalAlignment=</span><span class="s">&quot;Bottom&quot;</span>
</span><span class='line'>                        <span class="na">Margin=</span><span class="s">&quot;0,0,0,24&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;TextBlock</span> <span class="na">Style=</span><span class="s">&quot;{StaticResource PhoneTextTitle1Style}&quot;</span>
</span><span class='line'>                           <span class="na">Margin=</span><span class="s">&quot;24,0&quot;</span>
</span><span class='line'>                           <span class="na">TextWrapping=</span><span class="s">&quot;Wrap&quot;</span>
</span><span class='line'>                           <span class="na">Text=</span><span class="s">&quot;The Title&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;TextBlock</span> <span class="na">Style=</span><span class="s">&quot;{StaticResource PhoneTextTitle2Style}&quot;</span>
</span><span class='line'>                           <span class="na">Margin=</span><span class="s">&quot;24,0&quot;</span>
</span><span class='line'>                           <span class="na">TextWrapping=</span><span class="s">&quot;Wrap&quot;</span>
</span><span class='line'>                           <span class="na">Text=</span><span class="s">&quot;(with snarky subtitle)&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/StackPanel&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;StackPanel</span> <span class="na">x:Name=</span><span class="s">&quot;ContentPanel&quot;</span>
</span><span class='line'>                        <span class="na">Grid.Row=</span><span class="s">&quot;1&quot;</span>
</span><span class='line'>                        <span class="na">Background=</span><span class="s">&quot;{StaticResource PhoneChromeBrush}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;TextBlock</span> <span class="na">HorizontalAlignment=</span><span class="s">&quot;Left&quot;</span>
</span><span class='line'>                           <span class="na">TextWrapping=</span><span class="s">&quot;Wrap&quot;</span>
</span><span class='line'>                           <span class="na">VerticalAlignment=</span><span class="s">&quot;Top&quot;</span>
</span><span class='line'>                           <span class="na">Style=</span><span class="s">&quot;{StaticResource PhoneTextTitle3Style}&quot;</span>
</span><span class='line'>                           <span class="na">Margin=</span><span class="s">&quot;24&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;Run</span> <span class="na">Text=</span><span class="s">&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras nec erat massa. Phasellus accumsan ornare velit non vestibulum. Quisque nulla mi, condimentum sit amet sapien quis, blandit facilisis leo. Praesent pulvinar, justo at ornare aliquet, tellus massa varius metus, nec euismod dui metus a mauris. Sed eu erat et nulla varius pharetra. Suspendisse id mi nibh. Donec ac quam vel erat malesuada porttitor convallis condimentum ipsum. Donec risus lectus, auctor dictum mauris et, lacinia condimentum sem.&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;LineBreak</span> <span class="nt">/&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;LineBreak</span> <span class="nt">/&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;Run</span> <span class="na">Text=</span><span class="s">&quot;Donec gravida purus non gravida volutpat. Suspendisse id libero non nunc dignissim molestie. Phasellus lobortis sit amet libero non volutpat. Duis viverra, augue ac bibendum eleifend, leo metus tincidunt neque, in malesuada dolor leo ac eros. Ut eget justo faucibus, vulputate ante ac, varius urna. Etiam blandit turpis ac leo tristique scelerisque. Phasellus ac aliquam eros. Curabitur condimentum mi ligula, et porttitor leo consectetur sit amet. &quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;LineBreak</span> <span class="nt">/&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;LineBreak</span> <span class="nt">/&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;Run</span> <span class="na">Text=</span><span class="s">&quot; Sed pellentesque sapien a diam interdum, vitae sagittis velit varius. Curabitur vehicula in velit ac porttitor. Integer nec nunc tellus. Nullam pulvinar magna eu mollis dignissim. Sed mattis at erat id euismod. Vestibulum mattis nunc nec sapien ornare, sit amet tristique diam volutpat. Nulla ut venenatis erat. &quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/TextBlock&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/StackPanel&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/Grid&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ScrollViewer&gt;</span>
</span><span class='line'><span class="nt">&lt;/Grid&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Most of what&rsquo;s in here is pretty self-explanatory, save for a line or two. Don&rsquo;t worry, I&rsquo;ll go over those curious lines later.</p>

<p>You&rsquo;ll also need a rather large header image, of course. If you can&rsquo;t decide on one to use, feel free to use the one I did.
The position and size of the character&rsquo;s eyes actualy help in demonstrating this effect. No really, I&rsquo;m serious!</p>

<p><a href="http://y2bd.github.io/images/posts/parallax/chitanda.jpg"><img src="http://y2bd.github.io/images/posts/parallax/chitanda.jpg" title="Eru Chitanda, from Hyouka" ></a></p>

<p>Last, I&rsquo;d recommending dealing with the system tray in some manner, whether it&rsquo;d be making it transparent or hiding it altogether:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- hide the system tray --&gt;</span>
</span><span class='line'>shell:SystemTray.IsVisible=&quot;False&quot;
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- or make it transparent --&gt;</span>
</span><span class='line'>shell:SystemTray.IsVisible=&quot;True&quot;
</span><span class='line'>shell:SystemTray.Opacity=&quot;0&quot;
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s now jump into the code-behind of the page. First of all, you&rsquo;ll notice from the XAML that the image is top-aligned to the top of the page.
This isn&rsquo;t what we want. Instead, we want the center of the image to be at center of the empty space. As far as I know, there isn&rsquo;t an easy
way to do this within XAML (without clipping the image) so let&rsquo;s do it programmatically:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">MainPage</span> <span class="p">:</span> <span class="n">PhoneApplicationPage</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">// this is the height of the empty space above the content</span>
</span><span class='line'>  <span class="c1">// that we created in the XAML</span>
</span><span class='line'>  <span class="k">private</span> <span class="k">const</span> <span class="kt">double</span> <span class="n">EmptySpace</span> <span class="p">=</span> <span class="m">500</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// this will represent the vertical position of the image</span>
</span><span class='line'>  <span class="c1">// we&#39;re storing it in a variable because we&#39;ll need it later</span>
</span><span class='line'>  <span class="k">private</span> <span class="kt">double</span> <span class="n">_startPosition</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">public</span> <span class="nf">MainPage</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">InitializeComponent</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// we&#39;re putting our code in a Loaded event handler</span>
</span><span class='line'>    <span class="c1">// because we have to wait until the image control is loaded</span>
</span><span class='line'>    <span class="c1">// before getting its height</span>
</span><span class='line'>    <span class="n">Loaded</span> <span class="p">+=</span> <span class="n">OnLoaded</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">private</span> <span class="k">void</span> <span class="nf">OnLoaded</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Here&#39;s the magic </span>
</span><span class='line'>    <span class="c1">// To get the image where we want, we will shift it up by its height</span>
</span><span class='line'>    <span class="c1">// Then we&#39;ll shift it down by the height of the empty space</span>
</span><span class='line'>    <span class="c1">// Last, we&#39;ll divide that by two so we&#39;ll be directly between the top </span>
</span><span class='line'>    <span class="c1">// of the page and the bottom of the empty space</span>
</span><span class='line'>    <span class="n">_startPosition</span> <span class="p">=</span> <span class="p">(-</span><span class="n">Image</span><span class="p">.</span><span class="n">ActualHeight</span> <span class="p">+</span> <span class="n">EmptySpace</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// set the TranslateY of the CompositeTransform we created in the XAML</span>
</span><span class='line'>    <span class="c1">// to our calculated start position</span>
</span><span class='line'>    <span class="n">ImageTransform</span><span class="p">.</span><span class="n">TranslateY</span> <span class="p">=</span> <span class="n">_startPosition</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Perfect! Now Chitanda (or whatever you chose as your image) will be centered in the space rather than stuck to the top. This is very important
because later on, we&rsquo;ll be pulling the image down, so we don&rsquo;t want it to end immediately at the top.</p>

<p><img class="center" src="http://y2bd.github.io/images/posts/parallax/centering.png" title="Top-aligned versus centered" ></p>

<p>Now let&rsquo;s get to the actual effect. Although it looks like one smooth effect, there&rsquo;s actually two distinct parts. We need the image to scroll
slowly when being hidden by content (the first part of the video above), and we also need to the image to &ldquo;expand&rdquo; when the scrollview is squished
(the second part of the video). The first part is easier, so let&rsquo;s do it first.</p>

<p>We need a way of detecting when the the scrollview is scrolled, and by how much. It turns out that the little scrollbar you see on the right
is a good way of checking this. Now normally the scrollbar is buried deep within the ScrollViewer control, so we need some way of fishing it out.
We&rsquo;re going to use the <a href="http://msdn.microsoft.com/en-us/library/system.windows.media.visualtreehelper%28v=vs.110%29.aspx">VisualTreeHelper</a> to do this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">OnLoaded</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">_startPosition</span> <span class="p">=</span> <span class="p">(-</span><span class="n">Image</span><span class="p">.</span><span class="n">ActualHeight</span> <span class="p">+</span> <span class="n">EmptySpace</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">ImageTransform</span><span class="p">.</span><span class="n">TranslateY</span> <span class="p">=</span> <span class="n">_startPosition</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// extract the vertical scrollbar from our ScrollViewer named &#39;Scroller&#39;</span>
</span><span class='line'>  <span class="kt">var</span> <span class="n">scrollbar</span> <span class="p">=</span>
</span><span class='line'>    <span class="p">((</span><span class="n">FrameworkElement</span><span class="p">)</span> <span class="n">VisualTreeHelper</span><span class="p">.</span><span class="n">GetChild</span><span class="p">(</span><span class="n">Scroller</span><span class="p">,</span> <span class="m">0</span><span class="p">)).</span><span class="n">FindName</span><span class="p">(</span><span class="s">&quot;VerticalScrollBar&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">ScrollBar</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">scrollbar</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">// listen for scroll events</span>
</span><span class='line'>    <span class="n">scrollbar</span><span class="p">.</span><span class="n">ValueChanged</span> <span class="p">+=</span> <span class="n">OnScrollbarValueChanged</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now that we&rsquo;ve fetched the scrollbar, let&rsquo;s see how we use it:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">OnScrollbarValueChanged</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedPropertyChangedEventArgs</span><span class="p">&lt;</span><span class="kt">double</span><span class="p">&gt;</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">// if we&#39;re in positive scrolling territory</span>
</span><span class='line'>  <span class="c1">// where positive means down</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">NewValue</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="c1">// we&#39;re going to scroll our Image along with the content</span>
</span><span class='line'>    <span class="c1">// but only half as fast</span>
</span><span class='line'>    <span class="c1">// try removing the /2.0 and see what happens</span>
</span><span class='line'>    <span class="n">ImageTransform</span><span class="p">.</span><span class="n">TranslateY</span> <span class="p">=</span> <span class="n">_startPosition</span> <span class="p">-</span> <span class="n">e</span><span class="p">.</span><span class="n">NewValue</span><span class="p">/</span><span class="m">2.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// instead of using the scrollbar&#39;s value, you can also use the VerticalOffset</span>
</span><span class='line'>    <span class="c1">// of the ScrollViewer itself</span>
</span><span class='line'>    <span class="c1">// try it, see which one works better for you performance-wise</span>
</span><span class='line'>    <span class="c1">// ImageTransform.TranslateY = _startPosition - Scroller.VerticalOffset/2.0;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it! Now if you scroll the content to read more of it, you&rsquo;ll notice that instead of staying put,
the header image now scrolls along, but slower than the content.</p>

<p>We&rsquo;re not done yet though. If you try pulling down on the content, causing it to squish, you&rsquo;ll see that
nothing happens to the header image. You might think that it&rsquo;s because of the <code>if (e.NewValue &gt; 0)</code> check
we did. But if you remove it, you&rsquo;ll see that there&rsquo;s no difference.</p>

<p>The problem is that the scrollbar&rsquo;s value (as well as a ScrollViewer&rsquo;s VerticalOffset) doesn&rsquo;t respond to the
squishing effect. It doesn&rsquo;t become a negative value, which means that we can&rsquo;t use for the second part of the
parallax effect. This is where things get complicated.</p>

<p>The ScrollViewer control has a weird property called <code>Content</code>, which is a UIElement representing whatever you
put inside of it. That UIElement, like all UIElements, has a RenderTransform property. It turns out that when
you squish a ScrollViewer, it sets that RenderTransform to a new <a href="http://msdn.microsoft.com/en-us/library/system.windows.media.compositetransform%28v=vs.95%29.aspx">CompositeTransform</a> instance. It only does <em>once a squish occurs</em>
though. That means that if you tried accessing <code>Scroller.Content.RenderTransform</code> in our OnLoaded function, you wouldn&rsquo;t
get a CompositeTransform object. You&rsquo;d instead get a MatrixTransform, and we can&rsquo;t do anything useful with that. We&rsquo;re
going to need to detect when it becomes a CompositeTransform, and the MouseMove event is perfect for that:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">OnLoaded</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">_startPosition</span> <span class="p">=</span> <span class="p">(-</span><span class="n">Image</span><span class="p">.</span><span class="n">ActualHeight</span> <span class="p">+</span> <span class="n">EmptySpace</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">ImageTransform</span><span class="p">.</span><span class="n">TranslateY</span> <span class="p">=</span> <span class="n">_startPosition</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">var</span> <span class="n">scrollbar</span> <span class="p">=</span>
</span><span class='line'>    <span class="p">((</span><span class="n">FrameworkElement</span><span class="p">)</span> <span class="n">VisualTreeHelper</span><span class="p">.</span><span class="n">GetChild</span><span class="p">(</span><span class="n">Scroller</span><span class="p">,</span> <span class="m">0</span><span class="p">)).</span><span class="n">FindName</span><span class="p">(</span><span class="s">&quot;VerticalScrollBar&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">ScrollBar</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">scrollbar</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">scrollbar</span><span class="p">.</span><span class="n">ValueChanged</span> <span class="p">+=</span> <span class="n">OnScrollbarValueChanged</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// when the mouse (the user tapping his screen) moves</span>
</span><span class='line'>  <span class="c1">// within the ScrollViewer, there&#39;s a chance that</span>
</span><span class='line'>  <span class="c1">// the ScrollViewer&#39;s Content&#39;s RenderTransform will be set to</span>
</span><span class='line'>  <span class="c1">// a new CompositeTransform that we need to grab a hold of</span>
</span><span class='line'>  <span class="n">Scroller</span><span class="p">.</span><span class="n">MouseMove</span> <span class="p">+=</span> <span class="n">ScrollerOnMouseMove</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">ScrollerOnMouseMove</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">mouseEventArgs</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">// grab the content element</span>
</span><span class='line'>  <span class="kt">var</span> <span class="n">uiElement</span> <span class="p">=</span> <span class="n">Scroller</span><span class="p">.</span><span class="n">Content</span> <span class="k">as</span> <span class="n">UIElement</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">uiElement</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="c1">// try to grab its transform as a CompositeTransform</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">transform</span> <span class="p">=</span> <span class="n">uiElement</span><span class="p">.</span><span class="n">RenderTransform</span> <span class="k">as</span> <span class="n">CompositeTransform</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// if it&#39;s actually a CompositeTransform</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">transform</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="c1">// we&#39;re good, let&#39;s go to town!</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Awesome, we got our hook! Now, we can use the TranslateY of the CompositeTransform and move our header image
just like we did with the scrollbar. There&rsquo;s a slight problem though.</p>

<p>This method, ScrollerOnMouseMove, will only be called when the &ldquo;mouse&rdquo; is moving within the ScrollViewer. There&rsquo;s one
case that it doesn&rsquo;t handle: when the user squishes the content and then lets go, letting the content spring back
into place. ScrollerOnMouseMove won&rsquo;t be called then, so our image will never slide back into place.</p>

<p>We could use the MouseUp event for this to snap the image back into place, but that&rsquo;ll be a harsh snapping
instead of the smooth sliding that we want.</p>

<p>Instead, we&rsquo;ll recall that the TranslateY property of a CompositeTransform is actually a dependency property, which
means that it can be binded to:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="c1">// this will be our backing property for the binding</span>
</span><span class='line'><span class="k">private</span> <span class="kt">double</span> <span class="n">_verticalOffset</span><span class="p">;</span>
</span><span class='line'><span class="k">public</span> <span class="kt">double</span> <span class="n">VerticalOffset</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_verticalOffset</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">set</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">_verticalOffset</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">onVerticalOffsetChanged</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">onVerticalOffsetChanged</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">// now let&#39;s do the same thing we did with the scrollbar</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// we only want to handle the squishes here, as the </span>
</span><span class='line'>  <span class="c1">// scrollbar events handle the normal scrolling</span>
</span><span class='line'>  <span class="c1">// so we&#39;ll only respond to the squishes, when the content</span>
</span><span class='line'>  <span class="c1">// is being moved down</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">VerticalOffset</span> <span class="p">&gt;=</span> <span class="m">0</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">ImageTransform</span><span class="p">.</span><span class="n">TranslateY</span> <span class="p">=</span> <span class="n">_startPosition</span> <span class="p">+</span> <span class="n">VerticalOffset</span><span class="p">/</span><span class="m">2.0</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span> <span class="k">void</span> <span class="nf">ScrollerOnMouseMove</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">mouseEventArgs</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">// grab the content element</span>
</span><span class='line'>  <span class="kt">var</span> <span class="n">uiElement</span> <span class="p">=</span> <span class="n">Scroller</span><span class="p">.</span><span class="n">Content</span> <span class="k">as</span> <span class="n">UIElement</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">uiElement</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="c1">// try to grab its transform as a CompositeTransform</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">transform</span> <span class="p">=</span> <span class="n">uiElement</span><span class="p">.</span><span class="n">RenderTransform</span> <span class="k">as</span> <span class="n">CompositeTransform</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// if it&#39;s actually a CompositeTransform</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">transform</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="c1">// we&#39;re good, let&#39;s go to town!</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// let&#39;s set up the binding in a standard manner</span>
</span><span class='line'>      <span class="kt">var</span> <span class="n">binding</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Binding</span><span class="p">(</span><span class="s">&quot;VerticalOffset&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// in a perfect world, we use a reverse OneWay binding, where</span>
</span><span class='line'>      <span class="c1">// the DP we&#39;re binding to can set the backing property</span>
</span><span class='line'>      <span class="c1">// as this doesn&#39;t exist in the world of Windows Phone</span>
</span><span class='line'>      <span class="c1">// we&#39;re going to cheat and use TwoWay</span>
</span><span class='line'>      <span class="n">binding</span><span class="p">.</span><span class="n">Mode</span> <span class="p">=</span> <span class="n">BindingMode</span><span class="p">.</span><span class="n">TwoWay</span><span class="p">;</span>
</span><span class='line'>      <span class="n">binding</span><span class="p">.</span><span class="n">Source</span> <span class="p">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">BindingOperations</span><span class="p">.</span><span class="n">SetBinding</span><span class="p">(</span><span class="n">transform</span><span class="p">,</span> <span class="n">CompositeTransform</span><span class="p">.</span><span class="n">TranslateYProperty</span><span class="p">,</span> <span class="n">binding</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// we&#39;re going to release the event handler</span>
</span><span class='line'>      <span class="c1">// since we only need to bind once</span>
</span><span class='line'>      <span class="n">Scroller</span><span class="p">.</span><span class="n">MouseMove</span> <span class="p">-=</span> <span class="n">ScrollerOnMouseMove</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And now we&rsquo;re done! For real this time! If you pull down on the content, squishing it, you&rsquo;ll see your header image
slowly slide down to fill the space. And if you release, the image will slide up with the content.</p>

<p>All is not perfect in the land of Windows Phone though.</p>

<p>I mentioned way back in the beginning that there was a peculiar line in our XAML that I&rsquo;d discuss later. That
line is <code>ManipulationMode="Control"</code>. See, by default the ManipulationMode of a ScrollViewer is set to &ldquo;System&rdquo;.
What this amounts to is that scrolling events are optimized and reports are chunked to get the smooth scrolling
Windows Phone is known for. Setting it to &ldquo;Control&rdquo; throws some of these optimizations out of the window, but it&rsquo;s
the only way we can get accurate values for the scroll offsets. If you try setting it back to &ldquo;System&rdquo;, you&rsquo;ll see
that our smooth parallax scrolling becomes chunky, and in the case of handling squishes fails completely.</p>

<p>You&rsquo;ll have to settle for the (albeit slight) performance decrease if you want this effect&mdash;you&rsquo;ve probably already
noticed that sometimes the header image stutters. You&rsquo;ll also have to settle for some
sporadic bugs that I&rsquo;ve noticed, including the ScrollViewer getting &ldquo;stuck&rdquo; in the squished state,
or it jumping to the top or the bottom if you flick randomly.</p>

<p>If you&rsquo;re okay with it though (or you find some way to further optimize this, please tell me if you do!), this is a
really nice looking effect, and it honestly isn&rsquo;t a ton of trouble to implement.</p>

<p>If you don&rsquo;t feel like copy-pasting all of this code and organizing it yourself, you can download a fully-commented example here: <a href="https://github.com/y2bd/WPParallaxScrolling">https://github.com/y2bd/WPParallaxScrolling</a></p>

<p>Here are two articles I used when figuring this out:</p>

<ul>
<li><a href="http://blogs.msdn.com/b/jasongin/archive/2011/04/13/pull-down-to-refresh-a-wp7-listbox-or-scrollviewer.aspx">Pull-down-to-refresh a WP7 ListBox or ScrollViewer</a></li>
<li><a href="http://developer.nokia.com/community/wiki/How_to_keep_a_UI_element_in_view_when_scrolling_a_page_in_Windows_Phone">How to keep a UI element in view when scrolling a page in Windows Phone</a></li>
</ul>

]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Ordering voice commands on the "Did You Know?" page]]></title>
    <link href="http://y2bd.github.io/blog/2014/01/30/ordering-voice-commands-on-the-did-you-know-page/"/>
    
    <updated>2014-01-30T14:05:00-08:00</updated>
    <id>http://y2bd.github.io/blog/2014/01/30/ordering-voice-commands-on-the-did-you-know-page</id>
    
    <content type="html"><![CDATA[<p>Just a small tip for a small problem I ran into.</p>

<p>If your WP app has voice commands defined, you&rsquo;ll get a &ldquo;Did You Know?&rdquo; page where the user can see examples of all of the
voice commands your app has. If you have a lot of voice commands available, it might get a bit messy.</p>

<p><img src="http://y2bd.github.io/images/posts/didyouknow.png" title="'There\'s no sense of order at all!'" ></p>

<p>What&rsquo;s more confusing is that the order of the commands on this page probably won&rsquo;t match up with the order
you defined them in your VCD file.</p>

<p>It turns out that they&rsquo;re displayed in alphabetical order, with the key being the <code>Name</code> attribute of your <code>Command</code> object, which means that you can adjust your names to order them how you want, perhaps by prepending them with letters or numbers.</p>

<p>In my particular case, that means that my commands would go from</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Command</span> <span class="na">Name=</span><span class="s">&quot;SearchPokemon&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;Command</span> <span class="na">Name=</span><span class="s">&quot;SearchMoves&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;Command</span> <span class="na">Name=</span><span class="s">&quot;SearchTypes&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;Command</span> <span class="na">Name=</span><span class="s">&quot;SearchDualTypes&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>to the following with numbered prefixes</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Command</span> <span class="na">Name=</span><span class="s">&quot;00_SearchPokemon&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;Command</span> <span class="na">Name=</span><span class="s">&quot;01_SearchMoves&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;Command</span> <span class="na">Name=</span><span class="s">&quot;02_SearchTypes&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;Command</span> <span class="na">Name=</span><span class="s">&quot;03_SearchDualTypes&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you plan on inserting more commands later on, you&rsquo;ll have to rename older ones to get the order you want, so I&rsquo;d recommend using <code>string.Contains("base-name-of-command")</code> rather than equality checks in your code so that even if the prefix changes, your code will still work without having to do a million find-and-replaces.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Fixing the Long List Selector's Scrollbar Spacing Issue]]></title>
    <link href="http://y2bd.github.io/blog/2013/10/31/fixing-the-long-list-selectors-scrollbar-spacing-issue/"/>
    
    <updated>2013-10-31T23:53:00-07:00</updated>
    <id>http://y2bd.github.io/blog/2013/10/31/fixing-the-long-list-selectors-scrollbar-spacing-issue</id>
    
    <content type="html"><![CDATA[<p>Windows Phone&rsquo;s Long List Selector has an annoying problem. Its scrollbar takes up actual horizontal space on the layout grid, pushing your list items to the left. Now this normally isn&rsquo;t a problem; you can just offset your list items accordingly. The problem though is that if your list ever has too few elements such that scrolling is not necessary, the scrollbar&rsquo;s <code>Visibility</code> will be set to <code>Collapsed</code> and no longer take up any horizontal space, meaning that your offsets will cause your items to stick <em>too far</em> off of the right edge.</p>

<p>Here is a simple Style that you can add to a Resources file (or just a <code>phone:PhoneApplicationPage.Resources</code> block) that will solve this problem:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Style</span> <span class="na">x:Key=</span><span class="s">&quot;LLSFloatingScrollbarStyle&quot;</span>
</span><span class='line'>               <span class="na">TargetType=</span><span class="s">&quot;phone:LongListSelector&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Setter</span> <span class="na">Property=</span><span class="s">&quot;Background&quot;</span>
</span><span class='line'>            <span class="na">Value=</span><span class="s">&quot;Transparent&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Setter</span> <span class="na">Property=</span><span class="s">&quot;Foreground&quot;</span>
</span><span class='line'>            <span class="na">Value=</span><span class="s">&quot;{StaticResource PhoneForegroundBrush}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Setter</span> <span class="na">Property=</span><span class="s">&quot;Template&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Setter.Value&gt;</span>
</span><span class='line'>            <span class="nt">&lt;ControlTemplate</span> <span class="na">TargetType=</span><span class="s">&quot;phone:LongListSelector&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;Grid</span> <span class="na">Background=</span><span class="s">&quot;{TemplateBinding Background}&quot;</span>
</span><span class='line'>                      <span class="na">d:DesignWidth=</span><span class="s">&quot;480&quot;</span>
</span><span class='line'>                      <span class="na">d:DesignHeight=</span><span class="s">&quot;800&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;VisualStateManager.VisualStateGroups&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;VisualStateGroup</span> <span class="na">x:Name=</span><span class="s">&quot;ScrollStates&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;VisualStateGroup.Transitions&gt;</span>
</span><span class='line'>                                <span class="nt">&lt;VisualTransition</span> <span class="na">GeneratedDuration=</span><span class="s">&quot;00:00:00.5&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;/VisualStateGroup.Transitions&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;VisualState</span> <span class="na">x:Name=</span><span class="s">&quot;Scrolling&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                                <span class="nt">&lt;Storyboard&gt;</span>
</span><span class='line'>                                    <span class="nt">&lt;DoubleAnimation</span> <span class="na">Duration=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>                                                     <span class="na">To=</span><span class="s">&quot;1&quot;</span>
</span><span class='line'>                                                     <span class="na">Storyboard.TargetProperty=</span><span class="s">&quot;Opacity&quot;</span>
</span><span class='line'>                                                     <span class="na">Storyboard.TargetName=</span><span class="s">&quot;VerticalScrollBar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                                <span class="nt">&lt;/Storyboard&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;/VisualState&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;VisualState</span> <span class="na">x:Name=</span><span class="s">&quot;NotScrolling&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;/VisualStateGroup&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/VisualStateManager.VisualStateGroups&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;Grid</span> <span class="na">Margin=</span><span class="s">&quot;{TemplateBinding Padding}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>                        <span class="nt">&lt;ViewportControl</span> <span class="na">x:Name=</span><span class="s">&quot;ViewportControl&quot;</span>
</span><span class='line'>                                         <span class="na">HorizontalContentAlignment=</span><span class="s">&quot;Stretch&quot;</span>
</span><span class='line'>                                         <span class="na">VerticalAlignment=</span><span class="s">&quot;Top&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>                        <span class="nt">&lt;ScrollBar</span> <span class="na">x:Name=</span><span class="s">&quot;VerticalScrollBar&quot;</span>
</span><span class='line'>                                   <span class="na">Margin=</span><span class="s">&quot;4,0,-12,0&quot;</span>
</span><span class='line'>                                   <span class="na">Opacity=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>                                   <span class="na">HorizontalAlignment=</span><span class="s">&quot;Right&quot;</span>
</span><span class='line'>                                   <span class="na">Orientation=</span><span class="s">&quot;Vertical&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/Grid&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/Grid&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/ControlTemplate&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/Setter.Value&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Setter&gt;</span>
</span><span class='line'><span class="nt">&lt;/Style&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&lt;!-- then on your long list selector... --&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;phone:LongListSelector</span> <span class="na">Style=</span><span class="s">&quot;{StaticResource LLSFloatingScrollbarStyle}&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>What this will do is cause the scrollbar to float on top of the long list selector instead of taking up horizontal space, which means that it will never push the list&rsquo;s content to the left. A note though: take heed of the <code>Margin</code> attribute of the <code>Scrollbar</code> tag. You may need to adjust this to get the scrollbar to go to where you want. I personally like my scrollbars flush against the right side of the screen.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Rendering Image Sources with the Nokia Imaging SDK]]></title>
    <link href="http://y2bd.github.io/blog/2013/09/15/rendering-bitmapimages-with-the-nokia-imaging-sdk/"/>
    
    <updated>2013-09-15T14:04:00-07:00</updated>
    <id>http://y2bd.github.io/blog/2013/09/15/rendering-bitmapimages-with-the-nokia-imaging-sdk</id>
    
    <content type="html"><![CDATA[<p><strong>Edit</strong>: After some searching, I&rsquo;ve found the Nokia-Certified&trade; method of rendering to a BitmapImage/ImageSource.</p>

<p>First of all, Image controls can surprisingly take a WriteableBitmap as their source. You can do this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">BindedImageSource</span> <span class="p">=</span> <span class="k">new</span> <span class="n">WriteableBitmap</span><span class="p">(</span><span class="m">1024</span><span class="p">,</span><span class="m">768</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>and everything will be fine.</p>

<p>Second, remember how <code>IEditingSession</code> has a <code>RenderToWriteableBitmap()</code> method?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">var</span> <span class="n">myWBP</span> <span class="p">=</span> <span class="k">new</span> <span class="n">WriteableBitmap</span><span class="p">(</span><span class="m">1024</span><span class="p">,</span> <span class="m">768</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">await</span> <span class="n">_session</span><span class="p">.</span><span class="n">RenderToWriteableBitmapAsync</span><span class="p">(</span><span class="n">myWBP</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">myWBP</span><span class="p">.</span><span class="n">Invalidate</span><span class="p">();</span> <span class="c1">// forces a redraw</span>
</span><span class='line'>
</span><span class='line'><span class="n">BindedImageSource</span> <span class="p">=</span> <span class="n">myWBP</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>An interesting side-note is that RenderToWriteableBitmap appears to be shorthand for</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="kt">var</span> <span class="n">bitmap</span> <span class="p">=</span> <span class="n">myWBP</span><span class="p">.</span><span class="n">AsBitmap</span><span class="p">();</span>
</span><span class='line'><span class="k">await</span> <span class="n">_session</span><span class="p">.</span><span class="n">RenderToBitmapAsync</span><span class="p">(</span><span class="n">bitmap</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>bitmap</code> in this example is not a typical Bitmap, but a <a href="http://developer.nokia.com/Resources/Library/Imaging_API_Ref/#!nokiainteropserviceswindowsruntime-namespace/writeablebitmapextensions-class/writeablebitmapextensions-methods/asbitmap-method.html">mysterious object that wraps a WriteableBitmap&rsquo;s pixel data</a>. That means that changes to this bitmap <strong>affect the original WriteableBitmap</strong>. Now extracting it isn&rsquo;t very helpful in this small example, but if you check out the code for <a href="http://developer.nokia.com/Resources/Library/Lumia/#!nokia-imaging-sdk/sample-projects/filter-effects.html">Nokia&rsquo;s Filter Effects sample</a> (spefically checkout the <code>AbstractFilter</code> class) you can do some pretty neat things without having to create a new WriteableBitmap each time.</p>

<p>I&rsquo;ll keep the original post below for context.</p>

<hr />

<p>So I was working on integrating the Nokia Imaging SDK for my journal app, <a href="http://blog.y2bd.me/sofa/">Sofa</a>, for the <a href="http://developer.nokia.com/create/">Nokia Create contest</a>, essentially letting the user crop and enhance their photos before attaching them to an entry.</p>

<p>I found myself using the SDK in my ViewModel and wondering how I was supposed to get the rendered image into my View. The SDK itself provides methods for rendering to JPEG, raw Bitmaps, WriteableBitmaps, and even Image controls. The Image controls option (<code>renderToImageAsync()</code>) sounded like the way to go, but I realized that in the VM I don&rsquo;t have access to the Image control in my view. Instead, I have access to a BitmapImage that binds to the Source property of the Image control. So how do you get a BitmapImage out of the editing session?</p>

<p>Well after some searching I found that you can coax a BitmapImage out of a WriteableBitmap. Here&rsquo;s an extension method that lets you do exactly that:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">public</span> <span class="k">static</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">BitmapImage</span><span class="p">&gt;</span> <span class="n">RenderToBitmapImageAsync</span><span class="p">(</span><span class="k">this</span> <span class="n">IEditingSession</span> <span class="n">session</span><span class="p">,</span> <span class="kt">int</span> <span class="n">width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">height</span><span class="p">,</span> <span class="n">OutputOption</span> <span class="n">outputOption</span> <span class="p">=</span> <span class="n">OutputOption</span><span class="p">.</span><span class="n">PreserveAspectRatio</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">var</span> <span class="n">bi</span> <span class="p">=</span> <span class="k">new</span> <span class="n">BitmapImage</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">var</span> <span class="n">wbp</span> <span class="p">=</span> <span class="k">new</span> <span class="n">WriteableBitmap</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">);</span>
</span><span class='line'>  <span class="k">await</span> <span class="n">session</span><span class="p">.</span><span class="n">RenderToWriteableBitmapAsync</span><span class="p">(</span><span class="n">wbp</span><span class="p">,</span> <span class="n">outputOption</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">ms</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MemoryStream</span><span class="p">())</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">wbp</span><span class="p">.</span><span class="n">SaveJpeg</span><span class="p">(</span><span class="n">ms</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">100</span><span class="p">);</span>
</span><span class='line'>    <span class="n">bi</span><span class="p">.</span><span class="n">SetSource</span><span class="p">(</span><span class="n">ms</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// not super necessary</span>
</span><span class='line'>  <span class="n">wbp</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">bi</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Just put this into a static class (perhaps an Extensions.cs?) and then call</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="n">myBindedImage</span> <span class="p">=</span> <span class="k">await</span> <span class="n">_myEditSession</span><span class="p">.</span><span class="n">RenderToBitmapImageAsync</span><span class="p">(</span><span class="n">someWidth</span><span class="p">,</span> <span class="n">someHeight</span><span class="p">,</span> <span class="n">outputOptionIfYouWant</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note that <a href="https://www.google.com/search?q=writeablebitmap+memory+leak">there may be memory issues with WriteableBitmaps</a>, so be wary of calling this often, especially with high widths and heights. You may need to force garbage collection after a few calls.</p>

<p>Because of that, I&rsquo;m definitely not 100% keen on this method. It definitely works (wait for Sofa v1.1 to prove that) but I&rsquo;ll be on the lookout for less memory-intensive options.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Sofa is done!]]></title>
    <link href="http://y2bd.github.io/blog/2013/09/09/sofa-is-done/"/>
    
    <updated>2013-09-09T21:26:00-07:00</updated>
    <id>http://y2bd.github.io/blog/2013/09/09/sofa-is-done</id>
    
    <content type="html"><![CDATA[<p><img src="http://y2bd.github.io/images/posts/sofa.png" title="'The read, new, and photos views.'" ></p>

<p>It&rsquo;s been almost two months now, but Sofa, my journal application for Windows Phone 8, is finally done!</p>

<p>First of all, the last time I referred to Sofa I called it &lsquo;Quill&rsquo;. That was its work-in-progress name, but I had to change it because I couldn&rsquo;t find a nice quill vector to use as the main logo. No problem, Sofa was actually how I referred to the app within the code anyway, and it&rsquo;s still a nice title. Maybe I&rsquo;ll use Quill for something else&hellip;</p>

<p>This is easily the biggest programming project (hell, maybe even general project) that I&rsquo;ve worked on, and I&rsquo;ve learned a <em>ton</em> since I started. I now have a much better grip on Git, and by that I mean I know more than <code>git commit -am "Did stuff"</code> and <code>git push origin master</code>. I learned more about branching, merging, stashing (ran into a nasty problem with that), and am currently learning about rebasing because I have way too many one-line-changed commits.</p>

<p>I&rsquo;ve also learned a lot more about the tools and libraries I&rsquo;ve been using in my small WP dev &lsquo;career&rsquo;. From the Windows Phone Toolkit (which I ended up having to fork to fix a bug), to MVVMLight (minimal code-behind, I promise!), to new tools like SQLite and Microsoft&rsquo;s LiveSDK (for SkyDrive integration, need those bullet-point features).</p>

<p>I <em>think</em> I&rsquo;ve also learned to finally accept a v1 product&mdash;there are tons of features that I want for Sofa, but I needed to realize that if I spend way too much time trying to perfect it, I&rsquo;ll fall into my trap of getting frustrated, getting bored, and then giving up on it altogether (I have enough half-finished VS solutions to show the effects of this).</p>

<p>The last week and a half have been spent with some <em>awesome</em> beta testers who have been extremely helpful in finding bugs, little quirks, and feature suggestions. I am definitely having beta periods for all of my serious apps from now on.</p>

<p>Sofa has been in the approval process for the last two days and you wouldn&rsquo;t believe how nervous I am. Every morning I wake up, scramble to my phone, and falter, looking at that mail icon with a number next to it. I&rsquo;ve gotten &ldquo;Certification Failed&rdquo; for my other apps before (Dammit Pinned, get along with the budget phones!), and I really don&rsquo;t want that to happen now. There&rsquo;s two weeks until I have to move back to Southern California for college, and I have no idea what kind of free time I&rsquo;ll have once that happens.</p>

<p>Wish me luck!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[My multiline Textbox configuration]]></title>
    <link href="http://y2bd.github.io/blog/2013/08/27/my-multiline-textbox-configuration/"/>
    
    <updated>2013-08-27T20:04:00-07:00</updated>
    <id>http://y2bd.github.io/blog/2013/08/27/my-multiline-textbox-configuration</id>
    
    <content type="html"><![CDATA[<p>I&rsquo;m still working on Quill, but I figured this construct was useful enough for me to save in its
purest form, before I uglify it with orientation hacks.</p>

<p>This is an implementation of a properly-behaving multiline TextBox for Windows Phone. The original implementation
was sourced from <a href="http://klingdigital.net/2013/06/scrollviewer-and-multiline-textbox-windowsphone">KlingDigital</a>.
I just made extremely minor modifications, mostly refactoring to make it easier to modify (adding an input scope,
supporting landscape, etc).</p>

<p>Here is the XAML:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;phone:PhoneApplicationPage</span>
</span><span class='line'>    <span class="na">x:Class=</span><span class="s">&quot;Autocomplete.MainPage&quot;</span>
</span><span class='line'>    <span class="na">xmlns=</span><span class="s">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span>
</span><span class='line'>    <span class="na">xmlns:x=</span><span class="s">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>
</span><span class='line'>    <span class="na">xmlns:phone=</span><span class="s">&quot;clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone&quot;</span>
</span><span class='line'>    <span class="na">xmlns:shell=</span><span class="s">&quot;clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone&quot;</span>
</span><span class='line'>    <span class="na">xmlns:d=</span><span class="s">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span>
</span><span class='line'>    <span class="na">xmlns:mc=</span><span class="s">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span>
</span><span class='line'>    <span class="na">mc:Ignorable=</span><span class="s">&quot;d&quot;</span>
</span><span class='line'>    <span class="na">FontFamily=</span><span class="s">&quot;{StaticResource PhoneFontFamilyNormal}&quot;</span>
</span><span class='line'>    <span class="na">FontSize=</span><span class="s">&quot;{StaticResource PhoneFontSizeNormal}&quot;</span>
</span><span class='line'>    <span class="na">Foreground=</span><span class="s">&quot;{StaticResource PhoneForegroundBrush}&quot;</span>
</span><span class='line'>    <span class="na">SupportedOrientations=</span><span class="s">&quot;Portrait&quot;</span> <span class="na">Orientation=</span><span class="s">&quot;Portrait&quot;</span>
</span><span class='line'>    <span class="na">shell:SystemTray.IsVisible=</span><span class="s">&quot;True&quot;</span>
</span><span class='line'>    <span class="na">Loaded=</span><span class="s">&quot;PhoneApplicationPage_Loaded&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!--LayoutRoot is the root grid where all page content is placed--&gt;</span>
</span><span class='line'>    <span class="nt">&lt;Grid</span> <span class="na">x:Name=</span><span class="s">&quot;LayoutRoot&quot;</span> <span class="na">Background=</span><span class="s">&quot;Transparent&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Grid.RowDefinitions&gt;</span>
</span><span class='line'>            <span class="nt">&lt;RowDefinition/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;RowDefinition</span> <span class="na">Height=</span><span class="s">&quot;Auto&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/Grid.RowDefinitions&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;ScrollViewer</span> <span class="na">x:Name=</span><span class="s">&quot;Scroller&quot;</span>
</span><span class='line'>                      <span class="na">Background=</span><span class="s">&quot;#1ba1e2&quot;</span>
</span><span class='line'>                      <span class="na">Grid.Row=</span><span class="s">&quot;0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;StackPanel</span> <span class="na">VerticalAlignment=</span><span class="s">&quot;Top&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;TextBox</span> <span class="na">x:Name=</span><span class="s">&quot;ScrollerInput&quot;</span>
</span><span class='line'>                         <span class="na">TextWrapping=</span><span class="s">&quot;Wrap&quot;</span>
</span><span class='line'>                         <span class="na">AcceptsReturn=</span><span class="s">&quot;True&quot;</span>
</span><span class='line'>                         <span class="na">TextChanged=</span><span class="s">&quot;ScrollerInput_TextChanged&quot;</span>
</span><span class='line'>                         <span class="na">GotFocus=</span><span class="s">&quot;ScrollerInput_GotFocus&quot;</span>
</span><span class='line'>                         <span class="na">LostFocus=</span><span class="s">&quot;ScrollerInput_LostFocus&quot;</span>
</span><span class='line'>                         <span class="na">Tap=</span><span class="s">&quot;ScrollerInput_Tap&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/StackPanel&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/ScrollViewer&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;Grid</span> <span class="na">x:Name=</span><span class="s">&quot;KeyboardPlaceholder&quot;</span>
</span><span class='line'>              <span class="na">Grid.Row=</span><span class="s">&quot;1&quot;</span>
</span><span class='line'>              <span class="na">Visibility=</span><span class="s">&quot;Collapsed&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/Grid&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/phone:PhoneApplicationPage&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>and here is the codebehind:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="k">using</span> <span class="nn">Microsoft.Phone.Controls</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Windows</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Windows.Controls</span><span class="p">;</span>
</span><span class='line'><span class="k">using</span> <span class="nn">System.Windows.Media</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">namespace</span> <span class="nn">Autocomplete</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">MainPage</span> <span class="p">:</span> <span class="n">PhoneApplicationPage</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="k">private</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">PortraitHeight</span> <span class="p">=</span> <span class="m">336</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="kt">double</span> <span class="n">_inputHeight</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">private</span> <span class="kt">double</span> <span class="n">_tapHeight</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Constructor</span>
</span><span class='line'>    <span class="k">public</span> <span class="nf">MainPage</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="n">InitializeComponent</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">void</span> <span class="nf">SizePlaceholder</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="n">KeyboardPlaceholder</span><span class="p">.</span><span class="n">Height</span> <span class="p">=</span> <span class="n">PortraitHeight</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">void</span> <span class="nf">ForceLayout</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="n">App</span><span class="p">.</span><span class="n">RootFrame</span><span class="p">.</span><span class="n">RenderTransform</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CompositeTransform</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">LayoutRoot</span><span class="p">.</span><span class="n">UpdateLayout</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">void</span> <span class="nf">PhoneApplicationPage_Loaded</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">void</span> <span class="nf">ScrollerInput_TextChanged</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">TextChangedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="c1">// updates seem to be late if we don&#39;t invoke them with the dispatcher</span>
</span><span class='line'>      <span class="n">Dispatcher</span><span class="p">.</span><span class="n">BeginInvoke</span><span class="p">(()</span> <span class="p">=&gt;</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>        <span class="kt">double</span> <span class="n">currentInputHeight</span> <span class="p">=</span> <span class="n">ScrollerInput</span><span class="p">.</span><span class="n">ActualHeight</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">currentInputHeight</span> <span class="p">&gt;</span> <span class="n">_inputHeight</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="c1">// scroll up by the difference between the current box size and the old box size</span>
</span><span class='line'>          <span class="n">Scroller</span><span class="p">.</span><span class="n">ScrollToVerticalOffset</span><span class="p">(</span><span class="n">Scroller</span><span class="p">.</span><span class="n">VerticalOffset</span> <span class="p">+</span> <span class="n">currentInputHeight</span> <span class="p">-</span> <span class="n">_inputHeight</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">_inputHeight</span> <span class="p">=</span> <span class="n">currentInputHeight</span><span class="p">;</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">void</span> <span class="nf">ScrollerInput_GotFocus</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="n">KeyboardPlaceholder</span><span class="p">.</span><span class="n">Visibility</span> <span class="p">=</span> <span class="n">Visibility</span><span class="p">.</span><span class="n">Visible</span><span class="p">;</span>
</span><span class='line'>      <span class="n">SizePlaceholder</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">ForceLayout</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Scroller</span><span class="p">.</span><span class="n">ScrollToVerticalOffset</span><span class="p">(</span><span class="n">_tapHeight</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">void</span> <span class="nf">ScrollerInput_LostFocus</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="n">KeyboardPlaceholder</span><span class="p">.</span><span class="n">Visibility</span> <span class="p">=</span> <span class="n">Visibility</span><span class="p">.</span><span class="n">Collapsed</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="k">void</span> <span class="nf">ScrollerInput_Tap</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">Windows</span><span class="p">.</span><span class="n">Input</span><span class="p">.</span><span class="n">GestureEventArgs</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="n">_tapHeight</span> <span class="p">=</span> <span class="n">e</span><span class="p">.</span><span class="n">GetPosition</span><span class="p">(</span><span class="n">ScrollerInput</span><span class="p">).</span><span class="n">Y</span> <span class="p">-</span> <span class="m">120</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hopefully this template will prove useful in the future.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Fixing alignment issues with DataTemplateSelector]]></title>
    <link href="http://y2bd.github.io/blog/2013/08/16/fixing-alignment-issues-with-datatemplateselector/"/>
    
    <updated>2013-08-16T19:24:00-07:00</updated>
    <id>http://y2bd.github.io/blog/2013/08/16/fixing-alignment-issues-with-datatemplateselector</id>
    
    <content type="html"><![CDATA[<p>I&rsquo;m currently working on a journaling application for WP8. While designing the page for browsing through past entries, I found that I needed to be able to switch between data templates for the <code>LongListSelector</code> housed in the page. Some journal entries would have just text, some would have only a header photo, and some would have both, and I needed to display the entries differently for all three cases.</p>

<p>I found <a href="http://www.geekchamp.com/articles/implementing-windows-phone-7-datatemplateselector-and-customdatatemplateselector">this article</a> describing how to recreate WPF&rsquo;s <code>DataTemplateSelector</code> class for Windows Phone. It worked fine&mdash;after remaking the base abstract class and extending it for my specific case, all you need to do is specify the different data templates in your xaml:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;DataTemplate</span> <span class="na">x:Key=</span><span class="s">&quot;EntryListItemTemplate&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sel:EntryItemTemplateSelector&gt;</span>
</span><span class='line'>    <span class="nt">&lt;sel:EntryItemTemplateSelector.Both&gt;</span>
</span><span class='line'>      <span class="nt">&lt;DataTemplate&gt;</span> <span class="c">&lt;!-- content here --&gt;</span> <span class="nt">&lt;/DataTemplate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/sel:EntryItemTemplateSelector.Both&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;sel:EntryItemTemplateSelector.OnlyImage&gt;</span>
</span><span class='line'>      <span class="nt">&lt;DataTemplate&gt;</span> <span class="c">&lt;!-- content here --&gt;</span> <span class="nt">&lt;/DataTemplate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/sel:EntryItemTemplateSelector.OnlyImage&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;sel:EntryItemTemplateSelector.OnlyText&gt;</span>
</span><span class='line'>      <span class="nt">&lt;DataTemplate&gt;</span> <span class="c">&lt;!-- content here --&gt;</span> <span class="nt">&lt;/DataTemplate&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/sel:EntryItemTemplateSelector.OnlyText&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/sel:EntryItemTemplateSelector&gt;</span>
</span><span class='line'><span class="nt">&lt;/DataTemplate&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>A bit verbose, but it got the job done thankfully. The LongListSelector would now switch between templates as required.</p>

<p>There was a bit of a problem though.</p>

<p><img src="http://y2bd.github.io/images/posts/centered.png" title="'All of the elements are centered and small!'" ></p>

<p>Mordecai has the right idea.</p>

<p>All of the elements in the LongListSelector were no longer listening to the standard alignment and sizing rules, instead being only as wide as their content and staying put in the center.</p>

<p>I tried adjusting margins, hardcoding widths, <code>HorizontalAlignment=Stretch</code> <em>everything</em>, and either it wouldn&rsquo;t work, or it would make things even worse.</p>

<p>After a lot of vague googling (what exactly would you call this problem? I honestly had no idea), I arrove at the correct solution. My <code>EntryItemTemplateSelector</code>, inheriting from <code>ContentControl</code>, has a new property named <code>HorizontalContentAlignment</code>, which <a href="http://msdn.microsoft.com/en-us/library/system.windows.controls.control.horizontalcontentalignment.aspx">sets the alignment of the control&rsquo;s <em>content</em> rather than the control itself</a>. So all you have to do then is</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;sel:EntryItemTemplateSelector</span> <span class="na">HorizontalContentAlignment=</span><span class="s">&quot;Stretch&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>which gets you</p>

<p><img src="http://y2bd.github.io/images/posts/aligned.png" title="'Now every element is taking up the correct amount of space!'" ></p>

<p>Nothing satisfies Mordecai though.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Testing Code Highlighting]]></title>
    <link href="http://y2bd.github.io/blog/2013/08/14/testing-code-highlighting/"/>
    
    <updated>2013-08-14T19:19:00-07:00</updated>
    <id>http://y2bd.github.io/blog/2013/08/14/testing-code-highlighting</id>
    
    <content type="html"><![CDATA[<p>Let&rsquo;s see how syntax-highlighting works with this.</p>

<p>Here is some Lua code for a Love2D-based game:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="c1">-- mapper.lua</span>
</span><span class='line'><span class="c1">-- loads the maps and draws them to the screen</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- requires</span>
</span><span class='line'><span class="kd">local</span> <span class="n">tileLoader</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">libs.advtileloader.Loader&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- constants</span>
</span><span class='line'><span class="kd">local</span> <span class="n">TOTAL_LEVELS</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- local vars</span>
</span><span class='line'><span class="kd">local</span> <span class="k">function</span> <span class="nf">buildMapName</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="s2">&quot;</span><span class="s">level_&quot;</span> <span class="o">..</span> <span class="n">index</span> <span class="o">..</span> <span class="s2">&quot;</span><span class="s">.tmx&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- module</span>
</span><span class='line'><span class="kd">local</span> <span class="n">Mapper</span> <span class="o">=</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">currentLevelIndex</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>  <span class="n">maps</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nc">Mapper</span><span class="p">.</span><span class="nf">draw</span><span class="p">()</span>
</span><span class='line'>  <span class="n">love</span><span class="p">.</span><span class="n">graphics</span><span class="p">.</span><span class="n">setColor</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">)</span> <span class="c1">-- apparently we need to do this to prevent tint</span>
</span><span class='line'>  <span class="n">Mapper</span><span class="p">.</span><span class="n">maps</span><span class="p">[</span><span class="n">Mapper</span><span class="p">.</span><span class="n">currentLevelIndex</span><span class="p">]:</span><span class="n">draw</span><span class="p">()</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nc">Mapper</span><span class="p">.</span><span class="nf">getCurrentMap</span><span class="p">()</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">maps</span><span class="p">[</span><span class="n">currentLevelIndex</span><span class="p">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- init and return</span>
</span><span class='line'><span class="kd">local</span> <span class="k">function</span> <span class="nf">init</span><span class="p">()</span>
</span><span class='line'>  <span class="n">tileLoader</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">maps/&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">TOTAL_LEVELS</span> <span class="k">do</span>
</span><span class='line'>    <span class="kd">local</span> <span class="n">map</span> <span class="o">=</span> <span class="n">tileLoader</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">buildMapName</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">map</span><span class="p">:</span><span class="n">setDrawRange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">love</span><span class="p">.</span><span class="n">graphics</span><span class="p">.</span><span class="n">getWidth</span><span class="p">(),</span> <span class="n">love</span><span class="p">.</span><span class="n">graphics</span><span class="p">.</span><span class="n">getHeight</span><span class="p">())</span>
</span><span class='line'>    <span class="n">map</span><span class="p">.</span><span class="n">drawObjects</span> <span class="o">=</span> <span class="kc">false</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Mapper</span><span class="p">.</span><span class="n">maps</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">map</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">Mapper</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="n">init</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>And that&rsquo;s it.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[This is a beginning]]></title>
    <link href="http://y2bd.github.io/blog/2013/08/14/this-is-a-beginning/"/>
    
    <updated>2013-08-14T16:18:00-07:00</updated>
    <id>http://y2bd.github.io/blog/2013/08/14/this-is-a-beginning</id>
    
    <content type="html"><![CDATA[<p>Let us see where it brings us. Right now the site theme is pretty <em>ehh</em>, and I have to configure my actual domain to point to this.</p>
]]></content>
    
  </entry>
  
</feed>